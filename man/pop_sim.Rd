% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pop_sim.R
\name{pop_sim}
\alias{pop_sim}
\title{Simulate summer Chinook population}
\usage{
pop_sim(
  index = "total",
  n_years = 25,
  start_year = 2018,
  n_iter = 500,
  init_S = internal_data$init_S,
  init_PNI = internal_data$init_PNI,
  MREER_matrix = internal_data$MREER_out[, , ],
  age_prop_array = internal_data$age_props[, , , ],
  SR_err = internal_data$SR_err[, , ],
  HOS_model = "HOE",
  HOS_err = internal_data$HOS_err[, , ],
  NOB_err = internal_data$NOB_err[, , ],
  pfmc_err = internal_data$pfmc_err[, ],
  in_river_harvest_model_option = 1,
  implementation_error_scalar = 1,
  smolts = hatchery_smolt_fun(smolts_err = internal_data$smolt_err),
  hatchery_mark_rate = internal_data$hatch_MR_mu,
  HO_broodstock_need = 2000,
  NO_broodstock_target = c(Methow = 122, Okanogan = 650, Wenatchee = 310),
  release_mort_rate = 0.15,
  NT_Unmarked_release_rate = internal_data$URR,
  treaty_tiers = c(16000, 36250, 50000, Inf, rep(NA, 3)),
  treaty_rates = c(0.05, 0.1, NA, NA, rep(NA, 3)),
  treaty_scalar = c(NA, NA, 1, 0.75, rep(NA, 3)),
  treaty_offset = c(NA, NA, 29000, 16500, rep(NA, 3)),
  treaty_share = c(NA, NA, 0.5, 0.5, rep(NA, 3)),
  NT_tiers = c(5000, 16000, 29000, 32000, 36250, 50001, Inf),
  NT_rates = c(100, 200, 0.05, 0.06, 0.07, NA, NA),
  NT_scalar = c(rep(NA, 5), 1, 0.75),
  NT_offset = c(rep(NA, 5), 29000, 16500),
  NT_share = c(rep(NA, 5), 0.5, 0.5)
)
}
\arguments{
\item{index}{whether to use total or wild abundance index for harvest. options are "total" (default) or "wild"}

\item{n_years}{integer number of return years to simulate forward}

\item{start_year}{first brood year of simulation}

\item{n_iter}{number of population projections do to. Max possible is 500, the default}

\item{init_S}{4 x 6 matrix with the spawner (or smolt) abundance of each population in the first six years}

\item{init_PNI}{PNI values from 14 years leading up to the first year of simulation}

\item{MREER_matrix}{age x brood year matrix of simulated mature run exploitation rates}

\item{age_prop_array}{age x population x brood year array of age proportions by population and brood year}

\item{SR_err}{population x brood year matrix of recruitment deviations}

\item{HOS_model}{options are "zero" = no hatchery spawning or "HOE" where it hatchery spawners is a funciton of hatchery escapement}

\item{HOS_err}{population x return year matrix of pHOS errors}

\item{NOB_err}{population x return year matrix of natural origin broodstock collection errors. Exponentiated!}

\item{pfmc_err}{vector of return year annual deviations from PFMC AEQ ocean mort abundance}

\item{in_river_harvest_model_option}{which model of realized vs allowed harvest to use. option 1 is a proportion of allowed fit to data, option 2 is a broken hockey stick fit to data. Option 3 is the same as option 1 but assumes that the expected value is the allowed whereas option 1 assumes that the expected value is less than the allowed.}

\item{implementation_error_scalar}{a scalar for implementation error relative to the default which was fit to data. default of 1. increase to increase error or decrease to decrease error.}

\item{smolts}{vector of brood year annual smolt releases}

\item{hatchery_mark_rate}{real between 0 and 1. proprotion of hatchery origin fish that are adipose clipped}

\item{HO_broodstock_need}{integer, number of broodstock needed to produce smolt release targets}

\item{NO_broodstock_target}{named vector of three integers. number of natural origin broodstock needed to produce smolt releases for conservation programs. Values in vector must have names "Methow","Okanogan", and "Wenatchee"}

\item{release_mort_rate}{real between 0 and 1. post release mortality in sport fishery}

\item{NT_Unmarked_release_rate}{real between 0 and 1. proporiton of unmarked fish handled in non-treaty fishery that are released}

\item{treaty_tiers}{the run sizes below which the rates in the tier are applied}

\item{treaty_rates}{the harvest rate for the tier, if applicable. otherwise NA}

\item{treaty_scalar}{if the allowable catch is a function of the run size, as in the two highest tiers of the current rule, this number is multiplied by the run size}

\item{treaty_offset}{if the allowable catch is a function of the run size, as in the two highest tiers of the current rule, this number is subtracted from the scaled run size}

\item{treaty_share}{if the allowable catch is a function of the run size, as in the two highest tiers of the current rule, this number is multipled by the scales run size less the offset}

\item{NT_tiers}{same as above but for non-treaty}

\item{NT_rates}{same as above but for non-treaty}

\item{NT_scalar}{same as above but for non-treaty}

\item{NT_offset}{same as above but for non-treaty}

\item{NT_share}{same as above but for non-treaty}
}
\value{
returns a list object with results of the simulation and the also includes the hatchery control rule used.
}
\description{
Simulate summer Chinook population
}
\examples{

# the PAcific salmon treaty harvest control rule is
# 85\% of the 2009-2015 average harvest when escapment
# goal is not met

## 85\% of avg 09-15
ave_harv<-internal_data$pfmc_morts_2 |> filter(between(Year,2009,2015)) |>
 select(Year, RMRS,`PFMC NT Harvest Total`,In_river_harvest,Sector) |>
 pivot_wider(values_from = In_river_harvest,names_from=Sector) |>
 mutate(ER=(Treaty+NT)/RMRS) |> summarize(ER_limit=mean(ER)*.85) |>
 pull(ER_limit) |> c()

## define harvest control rule
PST_HCR<-list( treaty_tiers=c(round(12143/(1-floor((ave_harv)*100)/100)),rep(NA,2)),
              treaty_rates=c(floor((ave_harv/2)*100)/100,rep(NA,2)),
              treaty_scalar=c(NA,1,rep(NA,1)),
              treaty_offset=c(NA,12143,rep(NA,1)),
              treaty_share = c(NA,.5,rep(NA,1)),
              NT_tiers=c(round(12143/(1-floor((ave_harv)*100)/100)),rep(NA,2)),
              NT_rates=c(floor((ave_harv/2)*100)/100,rep(NA,2)),
              NT_scalar=c(NA,1,rep(NA,1)),
              NT_offset=c(NA,12143,rep(NA,1)),
              NT_share = c(NA,.5,rep(NA,1)))

## do simulation
PST_sim<-do.call(pop_sim,PST_HCR)
}
